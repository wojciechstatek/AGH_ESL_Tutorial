-- File: pwm_glitchless.vhd
-- Generated by MyHDL 0.11
-- Date: Sat Nov 14 17:35:07 2020


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity pwm_glitchless is
    port (
        clk_i: in std_logic;
        pwm_o: out std_logic;
        threshold: in unsigned(7 downto 0)
    );
end entity pwm_glitchless;


architecture MyHDL of pwm_glitchless is



signal threshold_r: unsigned(7 downto 0);
signal cnt: unsigned(7 downto 0);

begin




PWM_GLITCHLESS_LOC_INSTS_CHUNK_INSTS_0: process (clk_i) is
begin
    if rising_edge(clk_i) then
        cnt <= (cnt + 1);
        if (signed(resize(cnt, 9)) = (227 - 1)) then
            cnt <= to_unsigned(0, 8);
            threshold_r <= threshold;
        end if;
    end if;
end process PWM_GLITCHLESS_LOC_INSTS_CHUNK_INSTS_0;


pwm_o <= stdl(cnt < threshold_r);

end architecture MyHDL;

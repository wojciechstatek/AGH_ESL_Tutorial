-- File: wax_wane.vhd
-- Generated by MyHDL 0.11
-- Date: Sat Nov 14 17:35:07 2020


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity wax_wane is
    port (
        clk_i: in std_logic;
        led_o: out std_logic
    );
end entity wax_wane;


architecture MyHDL of wax_wane is



signal rampout: unsigned(22 downto 0);
signal k_cnt: unsigned(3 downto 0);
signal chunk_insts_0_delta: unsigned(22 downto 0);

begin




WAX_WANE_LOC_INSTS_CHUNK_INSTS_0_LOC_INSTS_CHUNK_INSTS_K: process (clk_i) is
begin
    if rising_edge(clk_i) then
        rampout <= (rampout + chunk_insts_0_delta);
        if (rampout = 1) then
            chunk_insts_0_delta <= to_unsigned(1, 23);
        elsif (signed(resize(rampout, 24)) = (8388608 - 2)) then
            chunk_insts_0_delta <= to_unsigned(-1, 23);
        elsif (chunk_insts_0_delta = 0) then
            chunk_insts_0_delta <= to_unsigned(1, 23);
            rampout <= to_unsigned(1, 23);
        end if;
    end if;
end process WAX_WANE_LOC_INSTS_CHUNK_INSTS_0_LOC_INSTS_CHUNK_INSTS_K;


led_o <= stdl(k_cnt < rampout(23-1 downto 19));

WAX_WANE_LOC_INSTS_CHUNK_INSTS_K_LOC_INSTS_CHUNK_INSTS_K: process (clk_i) is
begin
    if rising_edge(clk_i) then
        k_cnt <= (k_cnt + 1);
    end if;
end process WAX_WANE_LOC_INSTS_CHUNK_INSTS_K_LOC_INSTS_CHUNK_INSTS_K;

end architecture MyHDL;
